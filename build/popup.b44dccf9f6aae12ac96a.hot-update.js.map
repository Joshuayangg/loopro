{"version":3,"file":"popup.b44dccf9f6aae12ac96a.hot-update.js","sources":["webpack://loopro/./src/pages/Popup/Popup.jsx","webpack://loopro/webpack/runtime/getFullHash"],"sourcesContent":["import React from 'react';\nimport logo from '../../assets/img/logo.svg';\nimport Greetings from '../../containers/Greetings/Greetings';\nimport './Popup.css';\n\nclass Popup extends React.Component {\n\n  constructor(props) {\n    super(props);\n    window.addEventListener('load', this.getVideoData.bind(this));\n\n    var that = this;\n\n    chrome.runtime.onMessage.addListener(\n        function(message, sender, sendResponse) {\n            switch(message.type) {\n                case \"urlUpdated\":\n                    this.getVideoData(); // When url updates, update video data\n                    break;\n                default:\n                    console.error(\"Unrecognised message: \", message);\n            }\n        }.bind(that)\n    );\n\n    // Create refs used to get html input values\n    this.startTime = React.createRef();\n    this.endTime = React.createRef();\n    this.speed = React.createRef();\n\n    this.state = {\n      duration: \"placeholder\",\n      pageHasVideo: false,\n      paused: false,\n    };\n  }\n\n  getVideoData() {\n    var that = this;\n    chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\n        chrome.tabs.sendMessage(tabs[0].id, {type: \"getDuration\"}, (duration) => {\n          if(typeof duration == \"undefined\") {\n              // That's kind of bad\n              if(chrome.runtime.lastError) {\n                  // We couldn't talk to the content script, probably it's not there\n                  console.log(\"Content script not found!!!\");\n              }\n          } else {\n              // Use duration\n              that.setState({duration: duration});\n          }\n        });\n\n        chrome.tabs.sendMessage(tabs[0].id, {type: \"pageHasVideo\"}, (pageHasVideo) => {\n          if(typeof pageHasVideo == \"undefined\") {\n              // That's kind of bad\n              if(chrome.runtime.lastError) {\n                  // We couldn't talk to the content script, probably it's not there\n                  console.log(\"Content script not found!!!\");\n              }\n          } else {\n              that.setState({pageHasVideo: pageHasVideo});\n          }\n        });\n    });\n  }\n\n  minToSec(min) {\n\n  }\n\n  secToMin(sec) {\n    // code adapted from https://www.codegrepper.com/code-examples/javascript/convert+minutes+into+seconds+javascript\n\n    sec = parseInt(sec, 10); // convert value to number if it's string\n    let hours   = Math.floor(sec / 3600); // get hours\n    let minutes = Math.floor((sec - (hours * 3600)) / 60); // get minutes\n    let seconds = sec - (hours * 3600) - (minutes * 60); //  get seconds\n    // add 0 if value < 10; Example: 2 => 02\n    if (hours   < 10) {hours   = \"0\"+hours;}\n    if (minutes < 10) {minutes = \"0\"+minutes;}\n    if (seconds < 10) {seconds = \"0\"+seconds;}\n\n    if (hours == 0) {\n      return minutes+':'+seconds;\n    } else {\n      return hours+':'+minutes+':'+seconds; // Return is HH : MM : SS\n    }\n\n  }\n\n  play() {\n\n  }\n\n  pause() {\n\n  }\n\n  resume() {\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Does the page you're on have a video? {this.state.pageHasVideo.toString()}. Also, the duration for the video is {this.state.duration}.\n          </p>\n          <div>\n            <label for=\"startTime\">Start time:</label>\n            <input type=\"text\" id=\"startTime\" name=\"start\" ref={this.startTime} value=\"00:00\"></input><br></br>\n            <label for=\"endTime\">End time:</label>\n            <input type=\"text\" id=\"endTime\" name=\"end\" ref={this.endTime} value={this.secToMin(this.state.duration)}></input><br></br>\n            <label for=\"speed\">Speed:</label>\n            <input type=\"text\" id=\"speed\" name=\"start\" ref={this.speed} value=\"1.0\"></input><br></br>\n            <button onClick={this.play}>Play</button>\n            <button onClick={this.pause}>Pause</button>\n            <button onClick={this.stop}>Stop</button>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\n\n\nexport default Popup\n","__webpack_require__.h = () => (\"ec11119d868e23b35a1d\")"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AALA;AAOA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAvBA;AA4BA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;;;AAIA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;;;AAIA;;;AAIA;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;AAxHA;AACA;AA4HA;AAAA;;;;;;;;;;AA7HA;;;;;;;;;;;A;;;;;;;;ACLA;;;;A","sourceRoot":""}