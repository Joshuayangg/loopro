{"version":3,"file":"popup.9440602ab16a23cb8ef7.hot-update.js","sources":["webpack://loopro/./src/pages/Popup/Popup.jsx","webpack://loopro/webpack/runtime/getFullHash"],"sourcesContent":["import React from 'react';\nimport logo from '../../assets/img/loop-logo.svg';\nimport './Popup.css';\n\nclass Popup extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.videoDataGathered = false;\n\n    var that = this;\n\n    chrome.runtime.onMessage.addListener(\n        function(message, sender, sendResponse) {\n            switch(message.type) {\n                case \"urlUpdated\":\n                    this.getVideoData(); // When url updates, update video data\n                    break;\n                default:\n                    console.error(\"Unrecognised message: \", message);\n            }\n        }.bind(that)\n    );\n\n    // Bind this for various functions\n    this.getVideoData = this.getVideoData.bind(this);\n    this.startLoop = this.startLoop.bind(this);\n    this.pauseLoop = this.pauseLoop.bind(this);\n    this.resumeLoop = this.resumeLoop.bind(this);\n    this.stopLoop = this.stopLoop.bind(this);\n\n    this.onInputChange = this.onInputChange.bind(this);\n\n    this.loadState = this.loadState.bind(this);\n    this.saveState = this.saveState.bind(this);\n\n    // Add listener to get video data when things load\n    window.addEventListener('load', this.getVideoData);\n\n    // Create refs used to get html input values\n    this.startTime = React.createRef();\n    this.endTime = React.createRef();\n    this.speed = React.createRef();\n    this.logo = React.createRef();\n\n    if (localStorage.getItem(\"popup_state\")) {\n      console.log(\"LOATIND STAGEEE\");\n      this.loadState();\n    } else {\n      this.state = {\n        duration: \"0.0\",\n        pageHasVideo: false,\n        paused: false,\n        videoDataGathered: false,\n        startTime: \"00:00\",\n        endTime: \"00:00\",\n        speed: \"1.0\",\n      };\n    }\n    // window.addEventListener('beforeunload', function (e) {\n    //                                 e.preventDefault();\n    //                                 this.saveState();\n    //                                 alert(\"state saved?\");\n    //                               }.bind(this));\n  }\n\n  showLocalStorage() {\n    var i;\n    console.log(\"LOCAL STORAGE\");\n    for (i = 0; i < localStorage.length; i++)   {\n        console.log(localStorage.key(i) + \"=[\" + localStorage.getItem(localStorage.key(i)) + \"]\");\n    }\n  }\n\n  loadState() {\n    this.state = JSON.parse(localStorage.getItem('popup_state'));\n  }\n  saveState() {\n    localStorage.setItem('popup_state', JSON.stringify(this.state));\n  }\n\n  getVideoData() {\n    var that = this;\n    chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\n        chrome.tabs.sendMessage(tabs[0].id, {type: \"getVideoData\"}, (data) => {\n          if(typeof data == \"undefined\") {\n              // That's kind of bad\n              if(chrome.runtime.lastError) {\n                  // We couldn't talk to the content script, probably it's not there\n                  console.log(\"Content script not found!!!\");\n              }\n          } else {\n              // set state\n              that.setState({duration: data.duration, pageHasVideo: data.pageHasVideo, videoDataGathered: true});\n          }\n        });\n    });\n  }\n\n  minToSec(mins) {\n    // source: https://stackoverflow.com/questions/8907764/convert-minutes-to-seconds\n    var parts = mins.toString().split(':'),\n        minutes = +parts[0],\n        seconds = +parts[1];\n    return (minutes * 60 + seconds).toFixed(3);\n  }\n\n  secToMin(sec) {\n    // code adapted from https://www.codegrepper.com/code-examples/javascript/convert+minutes+into+seconds+javascript\n\n    sec = parseInt(sec, 10); // convert value to number if it's string\n    let hours   = Math.floor(sec / 3600); // get hours\n    let minutes = Math.floor((sec - (hours * 3600)) / 60); // get minutes\n    let seconds = sec - (hours * 3600) - (minutes * 60); //  get seconds\n    // add 0 if value < 10; Example: 2 => 02\n    if (hours   < 10) {hours   = \"0\"+hours;}\n    if (minutes < 10) {minutes = \"0\"+minutes;}\n    if (seconds < 10) {seconds = \"0\"+seconds;}\n\n    if (hours == 0) {\n      return minutes+':'+seconds;\n    } else {\n      return hours+':'+minutes+':'+seconds; // Return is HH : MM : SS\n    }\n\n  }\n\n  startLoop(e) {\n    e.preventDefault();\n    if (this.state.paused) {\n      this.resumeLoop();\n    } else {\n      var start = this.minToSec(this.startTime.current.value)\n      var end = this.minToSec(this.endTime.current.value)\n      console.log(this.speed.current.value)\n\n      chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\n          chrome.tabs.sendMessage(tabs[0].id, {\n            type: \"startLoop\",\n            startTime: start.toString(),\n            endTime: end.toString(),\n            speed: this.speed.current.value.toString()\n          });\n      });\n\n      this.logo.current.className = \"App-logo App-logo-anim\";\n    }\n  }\n\n  pauseLoop(e) {\n    e.preventDefault();\n    this.setState({paused: true});\n    chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\n        chrome.tabs.sendMessage(tabs[0].id, {type: \"pauseLoop\"})\n    });\n    this.logo.current.className = \"App-logo\";\n  }\n\n  resumeLoop() {\n    this.setState({paused: false});\n    chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\n        chrome.tabs.sendMessage(tabs[0].id, {type: \"resumeLoop\"})\n    });\n    this.logo.current.className = \"App-logo App-logo-anim\";\n  }\n\n  stopLoop(e) {\n    e.preventDefault();\n    this.setState({paused: false});\n    chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\n        chrome.tabs.sendMessage(tabs[0].id, {type: \"stopLoop\"})\n    });\n    this.logo.current.className = \"App-logo\";\n  }\n\n  onInputChange(e) {\n    e.preventDefault();\n    switch (e.target.id) {\n      case \"startTime\":\n        this.setState({startTime: e.target.value}, () => {\n          this.saveState();\n        });\n        break;\n      case \"endTime\":\n        this.setState({endTime: e.target.value}, () => {\n          this.saveState();\n        });\n        break;\n      case \"speed\":\n        this.setState({speed: e.target.value}, () => {\n          this.saveState();\n        });\n        break;\n      default:\n        console.log(\"not sure what was changed in input.\");\n    }\n  }\n\n  Main() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} ref={this.logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Does the page you're on have a video? {this.state.pageHasVideo.toString()}. Also, the duration for the video is {this.secToMin(this.state.duration).toString()}.\n          </p>\n          <div>\n            <label for=\"startTime\">Start time:</label>\n            <input type=\"text\" id=\"startTime\" name=\"start\" onChange={this.onInputChange} ref={this.startTime} defaultValue={this.state.startTime}></input><br></br>\n            <label for=\"endTime\" style={{padding:\"5px\"}}>End time:</label>\n            <input type=\"text\" id=\"endTime\" name=\"end\" onChange={this.onInputChange} ref={this.endTime} defaultValue={this.state.endTime}></input><br></br>\n            <label for=\"speed\" style={{padding:\"5px\"}}>Speed:</label>\n            <input type=\"text\" id=\"speed\" name=\"speed\" onChange={this.onInputChange} ref={this.speed} defaultValue={this.state.speed}></input><br></br>\n            <button onClick={this.startLoop} style={{padding:\"5px\"}} >Loop</button>\n            <button onClick={this.stopLoop} style={{padding:\"5px\"}}>Stop</button>\n          </div>\n        </header>\n      </div>\n    );\n  }\n\n  Loading() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Loading video data...\n          </p>\n        </header>\n      </div>\n    );\n  }\n\n  NoVideo() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Video not found on current page. Use Loopro on a different page, or try refreshing.\n          </p>\n        </header>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.state.pageHasVideo) {\n      if (this.state.videoDataGathered) {\n        return this.Main();\n      } else {\n        return this.Loading();\n      }\n    } else {\n      return this.NoVideo();\n    }\n  }\n}\n\n\n\nexport default Popup\n","__webpack_require__.h = () => (\"bd0fee7e612158fb3517\")"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AALA;AAOA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AA5DA;AA2DA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAGA;AACA;;;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAjBA;AAmBA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AA9PA;AACA;AAkQA;AAAA;;;;;;;;;;AAnQA;;;;;;;;;;;A;;;;;;;;ACJA;;;;A","sourceRoot":""}